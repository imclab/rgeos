useDynLib(rgeos)

import(methods)
import(sp)


export(checkPolygonsGEOS)
#export(thinnedSpatialPolyGEOS, checkPolygonsGEOS,unionSpatialPolygonsGEOS)
export(SpatialLinesIntersections, LinesIntersections,PolygonsIntersections)
export(poly_findInBoxGEOS)
export(checkHolesGPC)

# sp extension classes
exportClasses(Ring,SpatialRings, SpatialRingsDataFrame)
export(Ring,SpatialRings,SpatialRingsDataFrame)

# Utility Functions
export(getScale,setScale,doubletranslate,groupID)

# WKT Functions
export(readWKT, writeWKT)


# GEOS unary predicate functions
export(RGEOSisEmpty, RGEOSisValid, RGEOSisSimple, RGEOSisRing, RGEOSHasZ)
export(gEmpty, gValid, gSimple, gRing, gHasZ)


# GEOS binary predicate functions
export( RGEOSRelate, RGEOSDisjoint, RGEOSTouches, RGEOSIntersects, RGEOSCrosses,
		RGEOSWithin, RGEOSContains, RGEOSOverlaps, RGEOSEquals, RGEOSEqualsExact)
export( gRelate, gDisjoint, gTouches, gIntersects, gCrosses,
		gWithin, gContains, gOverlaps, gEquals, gEqualsExact)

# GEOS misc functions
export( RGEOSArea, RGEOSLength, RGEOSDistance, RGEOSisWithinDistance, 
		RGEOSHausdorffDistance)
export( gArea, gLength, gDistance, gWithinDistance)


# GEOS topology functions
export( RGEOSEnvelope, RGEOSConvexHull, RGEOSBoundary, RGEOSGetCentroid, 
		RGEOSPointOnSurface, RGEOSLineMerge, RGEOSUnionCascaded)
export( gEnvelope, gConvexHull, gBoundary, gCentroid, 
		gPointOnSurface, gLineMerge, gUnionCascaded)

export(	gSimplify, gPolygonize, gPolygonizer_getCutEdges)
		
# GEOS binary topology functions
export( gDifference, gSymdifference, gIntersection, gUnion)# RSB FIXME

# GEOS buffer functions
export( RGEOSBuffer, gBuffer )

# GEOS linearref functions
export( gProject, gInterpolate)


# gpclib shadows

#importFrom(graphics, plot)

exportClasses("gpc.poly", "gpc.poly.nohole")
exportMethods("show", "get.bbox", "plot", "intersect", "union", "symdiff",
              "setdiff", "[", "append.poly", "scale.poly", "area.poly",
              "get.pts", "coerce", "tristrip", "triangulate")

export("read.polyfile", "write.polyfile")


