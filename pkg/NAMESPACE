useDynLib(rgeos)

import(methods)
import(sp)


#export(thinnedSpatialPolyGEOS, checkPolygonsGEOS, unionSpatialPolygonsGEOS)

export(checkPolygonsGEOS)

export(SpatialLinesIntersections, LinesIntersections, PolygonsIntersections)

export(poly_findInBoxGEOS)

export(DiffGpcGEOS, SymDiffGpcGEOS, UnionGpcGEOS, UnionGpcGEOS, IntersectGpcGEOS, checkHolesGPC)

# sp extension classes
exportClasses(Ring,SpatialRings, SpatialRingsDataFrame)
export(Ring,SpatialRings,SpatialRingsDataFrame)

# Utility Functions
export(getScale,setScale,doubletranslate,groupID)

# WKT Functions
export(readWKT, writeWKT)


# GEOS unary predicate functions
export(RGEOSisEmpty, RGEOSisValid, RGEOSisValidReason, RGEOSisSimple, RGEOSisRing, RGEOSHasZ)

# GEOS binary predicate functions
export( RGEOSRelatePattern, RGEOSDisjoint, RGEOSTouches, RGEOSIntersects, RGEOSCrosses,
		RGEOSWithin, RGEOSContains, RGEOSOverlaps, RGEOSEquals, RGEOSEqualsExact)

# GEOS misc functions
export( RGEOSArea, RGEOSLength, RGEOSDistance, RGEOSisWithinDistance, 
		RGEOSHausdorffDistance, RGEOSHausdorffDistanceDensify)

# GEOS topology functions
export( RGEOSEnvelope, RGEOSConvexHull, RGEOSBoundary, RGEOSGetCentroid, RGEOSSimplify, 
		RGEOSTopologyPreserveSimplify, RGEOSPolygonize, RGEOSPolygonizer_getCutEdges,
		RGEOSPointOnSurface, RGEOSLineMerge)
		
# GEOS topology relation functions
export( RGEOSRelate, RGEOSDifference, RGEOSSymDifference, RGEOSIntersection, RGEOSUnion, RGEOSUnionCascaded)# RSB FIXME

# GEOS buffer functions
export( RGEOSBuffer, RGEOSSingleSidedBuffer)

# GEOS linearref functions
export( RGEOSProject, RGEOSInterpolate, RGEOSProjectNormalized, RGEOSInterpolateNormalized)


# gpclib shadows

exportClasses("gpc.poly")
exportMethods("show", "get.bbox", "plot", "intersect", "union",
              "setdiff", "[", "append.poly", "scale.poly", "area.poly",
              "coerce", "symdiff")


